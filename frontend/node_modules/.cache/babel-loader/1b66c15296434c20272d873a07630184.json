{"ast":null,"code":"var _jsxFileName = \"/home/victor/\\xC1rea de Trabalho/crud/frontend/src/components/user/UserCrud.jsx\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Main from '../template/Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'Users',\n  title: 'Usarios',\n  subtitle: 'cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n};\nconst baseUrl = 'http://localhost:3001/users';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(Resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  getUpdatedList(user) {\n    const list = this.state.list.filter(u => id !== user.id);\n    list.unshift(user);\n    return list;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n      children: \"Cadastro de Usu\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/victor/Área de Trabalho/crud/frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","headerProps","icon","title","subtitle","baseUrl","initialState","user","name","email","list","UserCrud","state","clear","setState","save","method","id","url","then","Resp","getUpdatedList","resp","data","filter","u","unshift","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAgB,kBAAhB;;AAEA,MAAMC,WAAW,GAAE;AACfC,EAAAA,IAAI,EAAE,OADS;AAEfC,EAAAA,KAAK,EAAE,SAFQ;AAGfC,EAAAA,QAAQ,EAAE;AAHK,CAAnB;AAMA,MAAMC,OAAO,GAAG,6BAAhB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AAACC,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAC;AAAjB,GADW;AAEjBC,EAAAA,IAAI,EAAC;AAFY,CAArB;AAKA,eAAe,MAAMC,QAAN,SAAuBb,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5Cc,KAF4C,GAEpC,EAAC,GAAGN;AAAJ,KAFoC;AAAA;;AAI5CO,EAAAA,KAAK,GAAE;AACH,SAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAAED,YAAY,CAACC;AAApB,KAAd;AACH;;AAEDQ,EAAAA,IAAI,GAAE;AACF,UAAMR,IAAI,GAAG,KAAKK,KAAL,CAAWL,IAAxB;AACA,UAAMS,MAAM,GAAGT,IAAI,CAACU,EAAL,GAAU,KAAV,GAAiB,MAAhC;AACA,UAAMC,GAAG,GAAGX,IAAI,CAACU,EAAL,GAAW,GAAEZ,OAAQ,IAAGE,IAAI,CAACU,EAAG,EAAhC,GAAoCZ,OAAhD;AACAN,IAAAA,KAAK,CAACiB,MAAD,CAAL,CAAcE,GAAd,EAAkBX,IAAlB,EACKY,IADL,CACUC,IAAI,IAAI;AACV,YAAMV,IAAI,GAAG,KAAKW,cAAL,CAAoBC,IAAI,CAACC,IAAzB,CAAb;AACA,WAAKT,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAED,YAAY,CAACC,IAApB;AAA0BG,QAAAA;AAA1B,OAAd;AACH,KAJL;AAKH;;AAEDW,EAAAA,cAAc,CAACd,IAAD,EAAM;AAChB,UAAMG,IAAI,GAAG,KAAKE,KAAL,CAAWF,IAAX,CAAgBc,MAAhB,CAAuBC,CAAC,IAAIR,EAAE,KAAKV,IAAI,CAACU,EAAxC,CAAb;AACAP,IAAAA,IAAI,CAACgB,OAAL,CAAanB,IAAb;AACA,WAAOG,IAAP;AACH;;AAEDiB,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,IAAD,OAAU1B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/B2C","sourcesContent":["import React, {Component} from \"react\"\nimport axios from 'axios'\nimport Main from'../template/Main'\n\nconst headerProps= {\n    icon: 'Users',\n    title: 'Usarios',\n    subtitle: 'cadastro de usuários: Incluir, Listar, Alterar e Excluir'\n}\n\nconst baseUrl = 'http://localhost:3001/users'\nconst initialState = {\n    user: {name: '', email:''},\n    list:[]\n}\n\nexport default class UserCrud extends Component {\n\n    state = {...initialState}\n\n    clear(){\n        this.setState({user: initialState.user})\n    }\n\n    save(){\n        const user = this.state.user\n        const method = user.id ? 'put' :'post'\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\n        axios[method](url,user)\n            .then(Resp => {\n                const list = this.getUpdatedList(resp.data)\n                this.setState({user: initialState.user, list})\n            })\n    }\n\n    getUpdatedList(user){\n        const list = this.state.list.filter(u => id !== user.id)\n        list.unshift(user)\n        return list\n    }\n\n    render(){\n        return(\n            <Main {...headerProps}>\n                Cadastro de Usuário\n            </Main>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}